# Generated by Django 3.2.5 on 2021-10-17 10:39

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_hr', models.BooleanField(default=False)),
                ('is_manager', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='LoanRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_id', models.IntegerField(blank=True, null=True, verbose_name='Request Id')),
                ('request_date', models.DateField(auto_now_add=True, verbose_name='Request Date')),
                ('needed_money', models.FloatField(verbose_name='Needed Money')),
                ('installment_start_date', models.DateField(default=django.utils.timezone.now, verbose_name='Installment Start Date')),
                ('installment_count', models.IntegerField(verbose_name='Installment Count')),
                ('installment_value', models.FloatField(verbose_name='Installment Value')),
            ],
        ),
        migrations.CreateModel(
            name='PermissionRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_id', models.IntegerField(blank=True, null=True, verbose_name='Request Id')),
                ('request_date', models.DateField(auto_now_add=True, verbose_name='Request Date')),
                ('leaving_reasons', models.TextField(blank=True, null=True, verbose_name='Leaving Reasons')),
                ('leaving_time', models.TimeField(default=django.utils.timezone.now, verbose_name='Leaving Time')),
                ('expected_return_time', models.TimeField(default=django.utils.timezone.now, verbose_name='Leaving Time')),
                ('contact_number', models.CharField(blank=True, max_length=18, null=True, verbose_name='Contact Number')),
            ],
        ),
        migrations.CreateModel(
            name='UserAccountsConnection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_salary', models.FloatField(verbose_name='Total Salary')),
                ('loan_account', models.FloatField(blank=True, null=True, verbose_name='Loan Account')),
                ('cost_center', models.FloatField(verbose_name='Cost Center')),
            ],
        ),
        migrations.CreateModel(
            name='UserAssets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notes', models.TextField(verbose_name='Notes')),
            ],
        ),
        migrations.CreateModel(
            name='UserAttendance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_in', models.DateTimeField(verbose_name='Date & Time In')),
                ('time_out', models.DateTimeField(verbose_name='Date & Time Out')),
            ],
        ),
        migrations.CreateModel(
            name='UserContact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('land_line', models.CharField(default='', max_length=20, verbose_name='Land Line')),
                ('mobile_number', models.CharField(default='', max_length=20, verbose_name='Mobile Number')),
                ('postal_box', models.CharField(default='', max_length=150, verbose_name='P.O.Box')),
                ('email', models.EmailField(default='', max_length=254, verbose_name='Email')),
                ('home_phone_number', models.CharField(default='', max_length=20, verbose_name='Home Number')),
                ('mother_address', models.CharField(default='', max_length=100, verbose_name='Mother Address')),
                ('mother_phone_number', models.CharField(default='', max_length=20, verbose_name='Mother Home Number')),
                ('guarantor', models.CharField(default='', max_length=100, verbose_name='Guarantor')),
                ('postal_code', models.IntegerField(blank=True, null=True, verbose_name='Postal Code')),
                ('Address', models.CharField(default='', max_length=200, verbose_name='Address')),
                ('passport_img', models.ImageField(default='', upload_to='user_img', verbose_name='Passport Image')),
                ('contract_img', models.ImageField(default='', upload_to='user_contract', verbose_name='Contract Image')),
                ('residence_img', models.ImageField(default='', upload_to='user_residence', verbose_name='Residence Image')),
            ],
        ),
        migrations.CreateModel(
            name='UserContract',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contract_start_date', models.DateField(default=django.utils.timezone.now, verbose_name='Contract Start Date')),
                ('contract_end_date', models.DateField(default=django.utils.timezone.now, verbose_name='Contract End Date')),
                ('notes', models.TextField(max_length=10000, verbose_name='Notes')),
            ],
        ),
        migrations.CreateModel(
            name='UserDefinationLetter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='UserDiscounts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('percentage', models.IntegerField(blank=True, null=True, verbose_name='Percentage')),
                ('money', models.FloatField(blank=True, null=True, verbose_name='Money')),
                ('category', models.CharField(choices=[('R', 'REPLACEMENT'), ('D', 'DISCOUNTS')], max_length=10, verbose_name='Category')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
            ],
        ),
        migrations.CreateModel(
            name='UserEvaluation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now, verbose_name='Date')),
                ('customer_experience', models.CharField(choices=[('N', 'NONE'), ('B', 'BEIGINNER'), ('I', 'Intermediate'), ('A', 'Advanced'), ('E', 'Expert')], max_length=2, verbose_name='Customer experience')),
                ('marketing', models.CharField(choices=[('N', 'NONE'), ('B', 'BEIGINNER'), ('I', 'Intermediate'), ('A', 'Advanced'), ('E', 'Expert')], max_length=2, verbose_name='Marketing')),
                ('management', models.CharField(choices=[('N', 'NONE'), ('B', 'BEIGINNER'), ('I', 'Intermediate'), ('A', 'Advanced'), ('E', 'Expert')], max_length=2, verbose_name='Management')),
                ('administration', models.CharField(choices=[('N', 'NONE'), ('B', 'BEIGINNER'), ('I', 'Intermediate'), ('A', 'Advanced'), ('E', 'Expert')], max_length=2, verbose_name='Adminstration')),
                ('presentation_skill', models.CharField(choices=[('N', 'NONE'), ('B', 'BEIGINNER'), ('I', 'Intermediate'), ('A', 'Advanced'), ('E', 'Expert')], max_length=2, verbose_name='Presentation SKill')),
                ('quality_of_work', models.CharField(choices=[('N', 'NONE'), ('B', 'BEIGINNER'), ('I', 'Intermediate'), ('A', 'Advanced'), ('E', 'Expert')], max_length=2, verbose_name='Quality Of WOrk')),
                ('efficiency', models.CharField(choices=[('N', 'NONE'), ('B', 'BEIGINNER'), ('I', 'Intermediate'), ('A', 'Advanced'), ('E', 'Expert')], max_length=2, verbose_name='Efficiency')),
                ('status', models.CharField(choices=[('ACTIVE', 'ACTIVE'), ('IN ACTIVE', 'IN ACTIVE')], max_length=15, verbose_name='Status')),
            ],
        ),
        migrations.CreateModel(
            name='UserFollowers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('birth_date', models.DateField(default=django.utils.timezone.now, verbose_name='Birth Date')),
                ('deserve_ticket', models.BooleanField(default=False, verbose_name='Deserve Ticket')),
                ('deserve_isurance', models.BooleanField(default=False, verbose_name='Deserve Insurance')),
                ('insurance_id_number', models.IntegerField(verbose_name='Insurance Id Number')),
                ('nationality', models.CharField(max_length=50, verbose_name='Nationality')),
                ('social_status', models.CharField(blank=True, choices=[('Single', 'Single'), ('Married', 'Married'), ('Divorced', 'Divorced')], max_length=10, null=True, verbose_name='Social Status')),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Femal', 'Femal')], max_length=7, verbose_name='Gender')),
                ('id_number', models.CharField(max_length=25, verbose_name='Id Number')),
            ],
        ),
        migrations.CreateModel(
            name='UserJob',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_title', models.CharField(max_length=100, verbose_name='Job Title')),
                ('spciality', models.CharField(default='', max_length=100, verbose_name='Speciality')),
                ('hiring_date', models.DateField(default=django.utils.timezone.now, verbose_name='Hiring Date')),
                ('experience_years', models.IntegerField(blank=True, null=True, verbose_name='Years Of Experience')),
            ],
        ),
        migrations.CreateModel(
            name='UserMedicalInsurance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('insurance_valid_date', models.DateField(default=django.utils.timezone.now, verbose_name='Insurance Valid Date')),
                ('insurance_number', models.IntegerField(verbose_name='Insurance Number')),
            ],
        ),
        migrations.CreateModel(
            name='UserNotes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.TextField(verbose_name='Note')),
            ],
        ),
        migrations.CreateModel(
            name='UserOverTime',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('overhours', models.FloatField(verbose_name='Over Hourse ')),
                ('total_over_time_hours', models.FloatField(blank=True, null=True, verbose_name='Total Overtime Hours')),
                ('date', models.DateField(default=django.utils.timezone.now, verbose_name='Date')),
                ('description', models.TextField(verbose_name='Description')),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Approved', 'Approved'), ('Rejected', 'Rejected')], default='Pending', max_length=15)),
                ('hour_equal', models.FloatField(blank=True, null=True, verbose_name='Hour Equal')),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='UserPerformanceIndicator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key_result_area', models.CharField(max_length=150, verbose_name='Key Result Area')),
                ('key_performance_indicator', models.CharField(max_length=150, verbose_name='Key Performance Indicator')),
                ('weightage', models.FloatField(verbose_name='Weightage')),
                ('percentage_achieved', models.FloatField(verbose_name='Percentage achieved')),
                ('date', models.DateField(default=django.utils.timezone.now, verbose_name='date')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ar_name', models.CharField(max_length=100, verbose_name='arabic name')),
                ('en_name', models.CharField(max_length=100, verbose_name='english name')),
                ('job_number', models.IntegerField(blank=True, null=True, verbose_name='Job Number')),
                ('social_status', models.CharField(blank=True, choices=[('Single', 'Single'), ('Married', 'Married'), ('Divorced', 'Divorced')], max_length=10, null=True, verbose_name='Social Status')),
                ('id_number', models.CharField(max_length=25, verbose_name='Id Number')),
                ('id_create_date', models.DateField(default=django.utils.timezone.now, verbose_name='Id Create Date')),
                ('id_end_date', models.DateField(default=django.utils.timezone.now, verbose_name='Id End Date')),
                ('id_issue_location', models.CharField(max_length=100, verbose_name='Id Issue Location')),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Femal', 'Femal')], max_length=10, verbose_name='Gender')),
                ('visa_number', models.IntegerField(blank=True, null=True, verbose_name='Visa Number')),
                ('birth_date', models.DateField(default=django.utils.timezone.now, verbose_name='Birth Date')),
                ('birth_location', models.CharField(max_length=100, verbose_name='Birth Location')),
                ('passport_number', models.CharField(max_length=15, verbose_name='Passport Number')),
                ('passport_issue_date', models.DateField(default=django.utils.timezone.now, verbose_name='Passport Issue Date')),
                ('passport_end_date', models.DateField(default=django.utils.timezone.now, verbose_name='Passport End Date')),
                ('borders_number', models.IntegerField(blank=True, null=True, verbose_name='Borders Number')),
                ('job', models.CharField(max_length=100, verbose_name='Job as In Id')),
                ('religion', models.CharField(choices=[('MUSLIM', 'MUSLIM'), ('CHRISTIEN', 'CHRISTIEN'), ('OTHER', 'OTHER')], max_length=50, verbose_name='Religion')),
                ('nationality', models.CharField(max_length=50, verbose_name='Nationality')),
                ('id_card_date', models.DateField(default=django.utils.timezone.now, verbose_name='Id Card Date')),
                ('image', models.ImageField(blank=True, null=True, upload_to='attachements_img/', verbose_name='Image')),
                ('file', models.FileField(blank=True, null=True, upload_to='attachements_files/', verbose_name='File')),
                ('first_login', models.BooleanField(default=True, verbose_name='First Login')),
                ('join_date', models.DateField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='Join Date')),
            ],
        ),
        migrations.CreateModel(
            name='UserPromotion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now, verbose_name='Promotion Date')),
            ],
        ),
        migrations.CreateModel(
            name='UserReplacements',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('percentage', models.IntegerField(blank=True, null=True, verbose_name='Percentage')),
                ('money', models.FloatField(blank=True, null=True, verbose_name='Money')),
                ('category', models.CharField(choices=[('R', 'REPLACEMENT'), ('D', 'DISCOUNTS')], max_length=10, verbose_name='Category')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
            ],
        ),
        migrations.CreateModel(
            name='UserResign',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('termination_date', models.DateField(default=django.utils.timezone.now, verbose_name='End Date')),
                ('notice_date', models.DateField(default=django.utils.timezone.now, verbose_name='Notice Date')),
            ],
        ),
        migrations.CreateModel(
            name='UserSalary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('main_salary', models.FloatField(verbose_name='Main Salary')),
                ('fast_transfer', models.BooleanField(default=False, verbose_name='Fast Transfer')),
                ('stop_salary', models.BooleanField(default=False, verbose_name='Stap Salary')),
                ('stop_reason', models.TextField(blank=True, max_length=50, null=True, verbose_name='Stop Reason')),
                ('stop_date', models.DateField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='Stop Date')),
                ('bank_account_number', models.IntegerField(verbose_name='bank account number')),
                ('bank_account_iban', models.CharField(blank=True, max_length=25, null=True, verbose_name='Bank Account')),
                ('daily_working_hours', models.FloatField(verbose_name='Daily Working Hours')),
                ('yearly_vacation_days_count', models.IntegerField(verbose_name='Yearly Vacations Days')),
                ('attend_execlude', models.BooleanField(default=False, verbose_name='Attend Execlude')),
                ('has_loan', models.BooleanField(default=False, verbose_name='Loan')),
                ('salary_protection', models.BooleanField(default=False, verbose_name='Salary Protection')),
                ('net_salary', models.FloatField(blank=True, null=True, verbose_name='Net Salary')),
            ],
        ),
        migrations.CreateModel(
            name='UserSocialInsurance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('social_insurance_id', models.IntegerField(verbose_name='Social Insurance Id')),
                ('join_date', models.DateField(default=django.utils.timezone.now, verbose_name='Join Date')),
                ('basic_salary', models.FloatField(verbose_name='Basic Salary')),
                ('housing_replacement', models.FloatField(verbose_name='Housing Replacement')),
                ('comissions_replacement', models.FloatField(verbose_name='Comission Replacement')),
                ('other_replacements', models.FloatField(verbose_name='Other Replacements')),
                ('salary_under_social_insurance', models.FloatField(verbose_name='Salary Under Social Insurance')),
                ('employee_last_day', models.DateField(default=django.utils.timezone.now, verbose_name='Employee Last Day')),
                ('labrorary_office_number', models.IntegerField(verbose_name='Labrorary Office Number')),
            ],
        ),
        migrations.CreateModel(
            name='UserTermination',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('termination_date', models.DateField(default=django.utils.timezone.now, verbose_name='End Date')),
                ('reason', models.TextField(default='', verbose_name='reason')),
                ('notice_date', models.DateField(default=django.utils.timezone.now, verbose_name='Notice Date')),
            ],
        ),
        migrations.CreateModel(
            name='UserTraining',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(default=django.utils.timezone.now, verbose_name='Start Date')),
                ('end_date', models.DateField(default=django.utils.timezone.now, verbose_name='End Date')),
                ('cost', models.FloatField(verbose_name='Cost')),
                ('notes', models.TextField(verbose_name='Notes')),
                ('status', models.CharField(choices=[('ACTIVE', 'ACTIVE'), ('IN ACTIVE', 'IN ACTIVE')], max_length=15, verbose_name='status')),
            ],
        ),
        migrations.CreateModel(
            name='UserTravel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deserve_ticket', models.BooleanField(default=False, verbose_name='Deserve Ticket')),
                ('ticket_count', models.IntegerField(verbose_name='Ticket Count')),
                ('ticket_value', models.FloatField(verbose_name='Ticket Value')),
            ],
        ),
        migrations.CreateModel(
            name='UserVacationRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_id', models.IntegerField(blank=True, null=True, verbose_name='Request Id')),
                ('request_date', models.DateField(auto_now_add=True, verbose_name='Request Date')),
                ('vacation_balance', models.IntegerField(verbose_name='Vacation Balance')),
                ('start_date', models.DateField(default=django.utils.timezone.now, verbose_name='Start Date ')),
                ('end_date', models.DateField(default=django.utils.timezone.now, verbose_name='End Date ')),
                ('last_vacation_date', models.DateField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='End Date ')),
                ('vacation_days_count', models.IntegerField(blank=True, null=True, verbose_name='Vacation Days Count')),
                ('paid_days_count', models.IntegerField(blank=True, null=True, verbose_name='Paid Days Count')),
                ('no_paid_days_count', models.IntegerField(blank=True, null=True, verbose_name='Not Paid Days Count')),
                ('vacation_salary_first', models.BooleanField(default=False, verbose_name='Vacation Salary First')),
                ('exit_visa', models.BooleanField(default=False, verbose_name='Exit Visa')),
                ('address', models.CharField(blank=True, max_length=200, null=True, verbose_name='Address')),
                ('contact_number', models.CharField(blank=True, max_length=18, null=True, verbose_name='Contact Number')),
                ('attachement', models.FileField(upload_to='request_files/', verbose_name='Attachement')),
                ('replacement_employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='replacement_employee', to=settings.AUTH_USER_MODEL, verbose_name='replacement employee')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_vacation_requests', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
        ),
    ]
